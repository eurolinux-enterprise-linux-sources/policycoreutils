From cddb1edacfd00f9ee3bf0761e8b3a28ad268dd0c Mon Sep 17 00:00:00 2001
From: Miroslav Grepl <mgrepl@redhat.com>
Date: Mon, 23 Jun 2014 10:22:18 +0200
Subject: [PATCH 2/5] Allow make only valid domains as permissive domains

---
 policycoreutils/semanage/seobject.py | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)

diff --git a/policycoreutils/semanage/seobject.py b/policycoreutils/semanage/seobject.py
index 191ca31..4cfae46 100644
--- a/policycoreutils/semanage/seobject.py
+++ b/policycoreutils/semanage/seobject.py
@@ -196,6 +196,24 @@ def untranslate(trans, prepend = 1):
 	else:
 		return raw
 
+all_types = None
+def get_all_types():
+    global all_types
+    if all_types == None:
+        all_types = map(lambda x: x['name'], setools.seinfo(setools.TYPE))
+    return all_types
+
+def get_all_domains():
+    all_domains = []
+    types=get_all_types()
+    types.sort()
+    for i in types:
+        m = re.findall("(.*)%s" % "_exec_t$", i) 
+        if len(m) > 0:
+            if len(re.findall("(.*)%s" % "_initrc$", m[0])) == 0 and m[0] not in all_domains:
+                all_domains.append(m[0])
+    return all_domains
+
 def get_valid_types(selinux_class_type):
     try:
     #if selinux.is_selinux_enabled():
@@ -411,6 +429,8 @@ class permissiveRecords(semanageRecords):
 
 	def add(self, type):
                import glob
+               if type not in get_all_domains():
+                      raise ValueError(_("%s is not a domain type") % type)
                name = "permissive_%s" % type
                dirname = "/var/lib/selinux"
                os.chdir(dirname)
-- 
2.0.0

